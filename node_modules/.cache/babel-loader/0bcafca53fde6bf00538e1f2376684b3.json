{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DEFAULT_CONTRACT_ADDRESS = '0xb1f8e55c7f64d203c1400b9d8555d050f94adf39';\n\nfunction formatAddressBalances(values, addresses, tokens) {\n  var balances = {};\n  addresses.forEach(function (addr, addrIdx) {\n    balances[addr] = {};\n    tokens.forEach(function (tokenAddr, tokenIdx) {\n      var balance = values[addrIdx * tokens.length + tokenIdx];\n      balances[addr][tokenAddr] = balance.toString();\n    });\n  });\n  return balances;\n}\n\nexports.formatAddressBalances = formatAddressBalances;","map":{"version":3,"sources":["/Users/VijayL/Documents/Blockchain/MyProjects/Encode_Club_hackathon/react-app/v-cred-portis/node_modules/eth-balance-checker/lib/common.js"],"names":["Object","defineProperty","exports","value","DEFAULT_CONTRACT_ADDRESS","formatAddressBalances","values","addresses","tokens","balances","forEach","addr","addrIdx","tokenAddr","tokenIdx","balance","length","toString"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,wBAAR,GAAmC,4CAAnC;;AACA,SAASC,qBAAT,CAA+BC,MAA/B,EAAuCC,SAAvC,EAAkDC,MAAlD,EAA0D;AACtD,MAAIC,QAAQ,GAAG,EAAf;AACAF,EAAAA,SAAS,CAACG,OAAV,CAAkB,UAAUC,IAAV,EAAgBC,OAAhB,EAAyB;AACvCH,IAAAA,QAAQ,CAACE,IAAD,CAAR,GAAiB,EAAjB;AACAH,IAAAA,MAAM,CAACE,OAAP,CAAe,UAAUG,SAAV,EAAqBC,QAArB,EAA+B;AAC1C,UAAIC,OAAO,GAAGT,MAAM,CAACM,OAAO,GAAGJ,MAAM,CAACQ,MAAjB,GAA0BF,QAA3B,CAApB;AACAL,MAAAA,QAAQ,CAACE,IAAD,CAAR,CAAeE,SAAf,IAA4BE,OAAO,CAACE,QAAR,EAA5B;AACH,KAHD;AAIH,GAND;AAOA,SAAOR,QAAP;AACH;;AACDP,OAAO,CAACG,qBAAR,GAAgCA,qBAAhC","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_CONTRACT_ADDRESS = '0xb1f8e55c7f64d203c1400b9d8555d050f94adf39';\nfunction formatAddressBalances(values, addresses, tokens) {\n    var balances = {};\n    addresses.forEach(function (addr, addrIdx) {\n        balances[addr] = {};\n        tokens.forEach(function (tokenAddr, tokenIdx) {\n            var balance = values[addrIdx * tokens.length + tokenIdx];\n            balances[addr][tokenAddr] = balance.toString();\n        });\n    });\n    return balances;\n}\nexports.formatAddressBalances = formatAddressBalances;\n"]},"metadata":{},"sourceType":"script"}