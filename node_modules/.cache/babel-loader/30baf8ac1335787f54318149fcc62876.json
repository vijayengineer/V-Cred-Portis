{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/VijayL/Documents/Blockchain/MyProjects/Encode_Club_hackathon/react-app/v-cred-portis/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { web3, portis } from './services/web3';\nimport web3Provider from 'web3';\nimport Address from './components/address';\nimport Balance from './components/balance';\nimport { getAddressBalances } from 'eth-balance-checker/lib/web3';\nconst initialState = {\n  address: \"\",\n  balance: 0\n};\n\nfunction App() {\n  _s();\n\n  const [state, setState] = useState(initialState);\n  const tokens = ['0x6ce8dA28E2f864420840cF74474eFf5fD80E65B8', '0xd66c6B4F0be8CE5b39D52E0Fd1344c389929B378', '0xEC5dCb5Dbf4B114C9d0F65BcCAb49EC54F6A0867'];\n  const web3P = new web3Provider();\n  web3.eth.getAccounts(accounts => {\n    console.log(accounts);\n  });\n  portis.showPortis();\n  portis.onLogin(address => {\n    web3.eth.getBalance(address).then(balance => {\n      setState({\n        balance: Number(web3.utils.fromWei(balance)),\n        address: address\n      });\n    });\n    getAddressBalances(web3P, address, tokens).then(balances => {\n      console.log(balances); // { \"0x0\": \"100\", \"0x456...\": \"200\" }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Address, {\n        address: state.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Balance, {\n        amount: state.balance,\n        symbol: \"ETH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2/eSVXfk2V5ZKttKXeUPXMa6Sd8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/VijayL/Documents/Blockchain/MyProjects/Encode_Club_hackathon/react-app/v-cred-portis/src/App.tsx"],"names":["React","useState","web3","portis","web3Provider","Address","Balance","getAddressBalances","initialState","address","balance","App","state","setState","tokens","web3P","eth","getAccounts","accounts","console","log","showPortis","onLogin","getBalance","then","Number","utils","fromWei","balances"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,OAAOC,YAAP,MAAyB,MAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AAOA,MAAMC,YAAoB,GAAG;AAC3BC,EAAAA,OAAO,EAAE,EADkB;AAE3BC,EAAAA,OAAO,EAAE;AAFkB,CAA7B;;AAKA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACO,YAAD,CAAlC;AACA,QAAMM,MAAM,GAAG,CAAC,4CAAD,EAA+C,4CAA/C,EAA6F,4CAA7F,CAAf;AACA,QAAMC,KAAK,GAAG,IAAIX,YAAJ,EAAd;AACAF,EAAAA,IAAI,CAACc,GAAL,CAASC,WAAT,CAAsBC,QAAD,IAAmB;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,GAFD;AAGAf,EAAAA,MAAM,CAACkB,UAAP;AACAlB,EAAAA,MAAM,CAACmB,OAAP,CAAgBb,OAAD,IAAa;AAC1BP,IAAAA,IAAI,CAACc,GAAL,CAASO,UAAT,CAAoBd,OAApB,EAA6Be,IAA7B,CAAmCd,OAAD,IAAa;AAC7CG,MAAAA,QAAQ,CAAC;AAAEH,QAAAA,OAAO,EAAEe,MAAM,CAACvB,IAAI,CAACwB,KAAL,CAAWC,OAAX,CAAmBjB,OAAnB,CAAD,CAAjB;AAAgDD,QAAAA,OAAO,EAAEA;AAAzD,OAAD,CAAR;AACD,KAFD;AAGAF,IAAAA,kBAAkB,CAACQ,KAAD,EAAQN,OAAR,EAAiBK,MAAjB,CAAlB,CAA2CU,IAA3C,CAAgDI,QAAQ,IAAI;AAC1DT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ,EAD0D,CACnC;AACxB,KAFD;AAID,GARD;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEhB,KAAK,CAACH;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAS,QAAA,MAAM,EAAEG,KAAK,CAACF,OAAvB;AAAgC,QAAA,MAAM,EAAE;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA5BQC,G;;KAAAA,G;AA8BT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { web3, portis } from './services/web3';\nimport web3Provider from 'web3';\nimport Address from './components/address';\nimport Balance from './components/balance';\nimport { getAddressBalances } from 'eth-balance-checker/lib/web3';\n\ntype IState = {\n  address: string;\n  balance: number;\n}\n\nconst initialState: IState = {\n  address: \"\",\n  balance: 0\n}\n\nfunction App() {\n\n  const [state, setState] = useState(initialState);\n  const tokens = ['0x6ce8dA28E2f864420840cF74474eFf5fD80E65B8', '0xd66c6B4F0be8CE5b39D52E0Fd1344c389929B378', '0xEC5dCb5Dbf4B114C9d0F65BcCAb49EC54F6A0867'];\n  const web3P = new web3Provider();\n  web3.eth.getAccounts((accounts: any) => {\n    console.log(accounts);\n  });\n  portis.showPortis();\n  portis.onLogin((address) => {\n    web3.eth.getBalance(address).then((balance) => {\n      setState({ balance: Number(web3.utils.fromWei(balance)), address: address })\n    });\n    getAddressBalances(web3P, address, tokens).then(balances => {\n      console.log(balances); // { \"0x0\": \"100\", \"0x456...\": \"200\" }\n    });\n\n  });\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Address address={state.address}></Address>\n        <Balance amount={state.balance} symbol={\"ETH\"}></Balance>\n      </header>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}